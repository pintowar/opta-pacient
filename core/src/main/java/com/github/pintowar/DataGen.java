/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.github.pintowar;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;
import com.github.pintowar.model.PatientAdmissionSchedule;
import com.thoughtworks.xstream.XStream;
import com.thoughtworks.xstream.security.AnyTypePermission;
import lombok.extern.slf4j.Slf4j;
import lombok.val;
import org.apache.commons.io.IOUtils;
import org.optaplanner.persistence.jackson.api.OptaPlannerJacksonModule;

import java.io.FileOutputStream;
import java.io.IOException;

@Slf4j
public class DataGen {

    String experiment(String file) throws JsonProcessingException {
        PatientAdmissionSchedule pas = readFromXml(file);
        return toJson(pas);
    }

    PatientAdmissionSchedule readFromXml(String xml) {
        val in = this.getClass().getClassLoader().getResourceAsStream(xml);
        val xstream = new XStream();
        xstream.setMode(XStream.ID_REFERENCES);
        XStream.setupDefaultSecurity(xstream);
        xstream.processAnnotations(PatientAdmissionSchedule.class);

        xstream.addPermission(new AnyTypePermission());
        return (PatientAdmissionSchedule) xstream.fromXML(in);
    }

    String toJson(PatientAdmissionSchedule pas) throws JsonProcessingException {
        val objectMapper = new ObjectMapper();
        objectMapper.registerModule(OptaPlannerJacksonModule.createModule());
        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(pas);
    }

    public void instances() throws IOException {
        val base = "data/xml/";
        val in = this.getClass().getClassLoader().getResourceAsStream(base);
        val lines = IOUtils.readLines(in, "UTF-8");
        lines.forEach(it -> {
            try {
                FileOutputStream stream = new FileOutputStream(it.replace(".xml", ".json"));
                IOUtils.write(experiment(base + it), stream, "UTF-8");
                log.info("Converted {} to json", it);
            } catch (IOException e) {
                log.error(e.getMessage(), e);
            }
        });
    }

    public static void main(String[] args) throws JsonProcessingException, IOException {
        new DataGen().instances();
    }
}
